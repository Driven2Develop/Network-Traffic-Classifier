Technology requirements: data for the run model should be a kafka stream. All algorithms must be implemented using pyspark.

Two MAIN programs need to be created:

1. 
python trainModel.py: the data input in this case is a large csv. This program produces a log file with all the execution times, and a model that I can load afterwards.
    
2.
python runModel.py : in this file I specify a the input data (Kafka Consumer), program loads model 
(generated by the train model) and predicts the label. Output is passed to a Kafka Producer. 


------------TRAIN MODEL ------------------------

Sub-Programs: (should be located in a separate folder, e.g. model)
   - dataReader
   - dataPreprocessor
   - dataDiscretizer
   - featureGenerator
   - dataPreparation
   - modelRunner (dumps the model into a file named trainModel.sav)
   - metricCalculator


1. DataReader

 Read csv into dataframe (pandas)

 testing:  print number of rows
 
2. DataPreprocessor
 - ConvertTypes
    ENDTIME, STARTTIME=TIMESTAMP
	PACKETINCOUNT, PACKETOUTCOUNT,BYTEINCOUNT,BYTEOUTCOUNT=INT32
	TRANSPORTFLAGS,FLOWS=INT8
 testing: print types of columns df.dtypes
Sort by ENDTIME
Duration: (endtime-starttime)


 3. FeatureGenerator_TimeBased
   PRECONDITION: dataset must be sorted by endtime

 4. FeatureGenerator_ConnectionBased
   PRECONDITION: dataset must be sorted by endtime

 5. DataDiscretizer 
 Purpose is to discretize some of the attributes
 nBins = SQTROOT(totalnumberofvalues)

 6. DataPreparation
    Split (testing, training set)
    Also, training set must be undersampled (so distribution is 50%-50%)

 7. ModelRunner 
   INPUTS: type, training set, testing set
   OUTPUT: features + confidences 
    model.fit(x, y) where x is the label column, and y all the features to be used in the learning process. 
   model.predict(testSet) to run the model on the test data
   

   Final output: trainModel.sav (pickle)

Links: 

Dealing with big data (train model): https://www.dataquest.io/blog/pandas-big-data/

https://machinelearningmastery.com/save-load-machine-learning-models-python-scikit-learn/

http://dataaspirant.com/2017/02/01/decision-tree-algorithm-python-with-scikit-learn/

https://blog.sicara.com/profile-surgical-time-tracking-python-db1e0a5c06b6